using MunitionAutoPatcher.Models;
using MunitionAutoPatcher.Services.Interfaces;
using System.Text;

namespace MunitionAutoPatcher.Services.Implementations;

/// <summary>
/// Stub implementation of the RobCo ini generator
/// </summary>
public class RobCoIniGenerator : IRobCoIniGenerator
{
    public async Task<bool> GenerateIniAsync(string outputPath, List<WeaponMapping> mappings, IProgress<string>? progress = null)
    {
        progress?.Report("RobCo INIファイルを生成しています... (スタブ)");
        await Task.Delay(500); // Simulate generation

        var iniContent = PreviewIni(mappings);
        
        // In a real implementation, we would write to file here
        // await File.WriteAllTextAsync(outputPath, iniContent);
        
        progress?.Report($"INIファイルが生成されました: {outputPath}");
        return true;
    }

    public string PreviewIni(List<WeaponMapping> mappings)
    {
        var sb = new StringBuilder();
        sb.AppendLine("; RobCo Patcher Configuration");
        sb.AppendLine("; Generated by Munition AutoPatcher");
        sb.AppendLine();
        
        foreach (var mapping in mappings)
        {
            sb.AppendLine($"[Weapon:{mapping.WeaponFormKey}]");
            sb.AppendLine($"Ammo={mapping.AmmoFormKey}");
            sb.AppendLine($"Strategy={mapping.Strategy}");
            sb.AppendLine();
        }

        return sb.ToString();
    }
}
